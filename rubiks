#!/usr/bin/env python
# (c) Copyright 2017-2018 OLX

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals

import os
import sys

repobase = os.path.realpath(os.path.split(sys.modules[__name__].__file__)[0])

sys.path.insert(0, os.path.join(repobase, 'lib'))

# === real program starts here ===

import load_all
import rubiks_repository
import obj_registry
import load_python
import kube_loader
import user_error

try:
    if sys.argv[1] == 'help':
        objs = load_python.PythonBaseFile.get_kube_objs()
        for oname in objs:
            if oname.lower() == sys.argv[2].lower():
                print(objs[oname].get_help())
                sys.exit(0)
        print('Unknown type {}'.format(sys.argv[2].lower()), file=sys.stderr)
        sys.exit(1)
except IndexError:
    pass

r = rubiks_repository.RubiksRepository()
obj_registry.init(r.is_openshift)
coll = load_python.PythonFileCollection(r)

with user_error.user_errors(True):
    coll.load_all_python(r.sources)
    coll.gen_output()
