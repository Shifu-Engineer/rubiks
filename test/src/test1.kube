import os
import ns

output(Namespace('test-ns'))

output(DockerCredentials('docker-pull-secrets',
                         dockers={
                             'mydocker.hub': {
                                 'username': 'foo',
                                 'email': 'foo@example.com',
                                 'password': 'password',
                                 'auth': 'Zm9vOnBhc3N3b3Jk',
                                 },
                             }))

with open(os.path.join(repobase, 'Makefile')) as f:
    mf_text = f.read().replace('\t', '    ')

output(ConfigMap('test-config',
                 files={'fake-makefile': mf_text}))

ret = DaemonSet('fluentd-elasticsearch')
ret.labels.update({'tier': 'monitoring', 'app': ret.name, 'version': 'v1'})
ret.pod_template.name = 'fluentd'
ret.pod_template.volumes.extend((
    PodVolumeHostSpec(name='var-log', path='/var/log'),
    PodVolumeHostSpec(name='var-lib-docker-containers', path='/var/lib/docker/containers'),
    PodVolumeConfigMapSpec(name='config-vol', map_name='fluentd-config'),
    ))
ret.pod_template.containers.append(ContainerSpec('fluentd-elasticsearch',
                                                 command=[
                                                     'bash',
                                                     '-c',
                                                     'td-agent-gem install --no-document fluent-plugin-geoip-filter -v 0.3.0; exec /usr/sbin/td-agent'],
                                                 image='gcr.io/google_containers/fluentd-elasticsearch:1.20',
                                                 ))
ctr = ret.pod_template.containers[-1]
ctr.volumeMounts.extend((
    ContainerVolumeMountSpec(name=ret.pod_template.volumes[0].name, path=ret.pod_template.volumes[0].path),
    ContainerVolumeMountSpec(name=ret.pod_template.volumes[1].name, path=ret.pod_template.volumes[1].path, readOnly=True),
    ContainerVolumeMountSpec(name=ret.pod_template.volumes[2].name, path='/etc/td-agent'),
    ))
ctr.resources.requests.cpu = 0.5
output(ret)
